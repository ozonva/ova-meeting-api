// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonva/ova-meeting-api/internal/saver (interfaces: Saver)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/ozonva/ova-meeting-api/internal/models"
	reflect "reflect"
)

// MockSaver is a mock of Saver interface
type MockSaver struct {
	ctrl     *gomock.Controller
	recorder *MockSaverMockRecorder
}

// MockSaverMockRecorder is the mock recorder for MockSaver
type MockSaverMockRecorder struct {
	mock *MockSaver
}

// NewMockSaver creates a new mock instance
func NewMockSaver(ctrl *gomock.Controller) *MockSaver {
	mock := &MockSaver{ctrl: ctrl}
	mock.recorder = &MockSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSaver) EXPECT() *MockSaverMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *MockSaver) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close
func (mr *MockSaverMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockSaver)(nil).Close))
}

// Save mocks base method
func (m *MockSaver) Save(arg0 models.Meeting) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockSaverMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockSaver)(nil).Save), arg0)
}

// init mocks base method
func (m *MockSaver) init() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "init")
}

// init indicates an expected call of init
func (mr *MockSaverMockRecorder) init() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "init", reflect.TypeOf((*MockSaver)(nil).init))
}
